/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Paneles;

import Personas.*;
import Vehiculos.*;
import View.*;

/**
 *
 * @author Kevin
 */
public class panelTabla extends javax.swing.JPanel {
    String[] titulos;
    Object[][] datos;
    VentanaPrincipal parent;
    /**
     * Creates new form panelTabla
     */
    public panelTabla(View.VentanaPrincipal parent, Object[] objetos, String tipo) {
        this.parent=parent;
        
        titulos=setTitulos(tipo);
        datos=setDatos(objetos, tipo);
        initComponents();
        jTable2.setRowHeight(40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jTable2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            this.datos,
            this.titulos
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

    private String[] setTitulos(String tipo) {
        if(tipo.equals("Secretaria")|| tipo.equals("Contable")||tipo.equals("AdministradorAcopio")){
            return new String[]{"Nombre","Apellidos","Carnet","Fecha de Entrada"};
        } else if (tipo.equals("Ganadero")||tipo.equals("Transportista")||tipo.equals("Usuario")||tipo.equals("Trabajador")) {
            return new String[]{"Nombre","Apellidos","Carnet","Fecha de Entrada", "Datos Adicionales"};
        }else{
            return new String[]{"ID", "Capacidad", "Contenido en litros"};
            
        }
    }

    private Object[][] setDatos(Object[] objetos, String tipo) {
        Object[][] datos=new Object[objetos.length][5];
        
        for(int fila=0; fila<datos.length;fila++){
            
            if(objetos[fila] instanceof Trabajador){
                Trabajador trabajador=(Trabajador)objetos[fila];
                datos[fila]=new Object[]{trabajador.getNombre(),trabajador.getApellidos(),trabajador.getCI(),trabajador.getFechaDeEntradaAEmpresa(), null};
                
            if(trabajador instanceof Ganadero){
                datos[fila][4]=((Ganadero)trabajador).getDireccionFinca();
            }
            if(trabajador instanceof Transportista){
                datos[fila][4]=((Transportista)trabajador).getVehiculoAsignado().toString();
            }
                
            } else if(objetos[fila] instanceof CamionCisterna){
                datos[fila][0]=((CamionCisterna)objetos[fila]).getId();
                datos[fila][1]=((CamionCisterna)objetos[fila]).getCapacidadMaximaLitros();
                datos[fila][2]=((CamionCisterna)objetos[fila]).getContenidoActualLitros();
                
            }
        }
        
        
        return datos;
    }
}
